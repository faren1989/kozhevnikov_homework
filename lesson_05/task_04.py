# 4. Представлен список чисел. Необходимо вывести те его элементы, значения которых больше предыдущего, например:
# src = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
# result = [12, 44, 4, 10, 78, 123]
# Подумайте, как можно сделать оптимизацию кода по памяти, по скорости

from sys import getsizeof
import time

src = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]

start1 = time.perf_counter()
result1 = [i for i in src if i > src[src.index(i)-1] and src.index(i) > 0]
end1 = time.perf_counter()
td1 = end1 - start1

print(result1, 'память:', getsizeof(result1), 'скорость:', f'{td1:.10f}')

start2 = time.perf_counter()
result2 = []
for i in src:
    if i > src[src.index(i)-1] and src.index(i) > 0:
        result2.append(i)
end2 = time.perf_counter()
td2 = end2 - start2

print(result2, 'память:', getsizeof(result2), 'скорость:', f'{td2:.10f}')

# Что касается оптимизации.
# По памяти. Здесь я не вижу особого простора для оптимизации, пскольку нам так и так приходится хранить изначальный
# список, по которому мы проводим проверку, и конечный список, который мы генерируем в процессе выполнения задачи.
# По скорости. После многократного сравнения, второй подход оказался быстрее, наверное, потому, что ему не приходилось
# "вызывать" конечный список при каждой итерации по src.
