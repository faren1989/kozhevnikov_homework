# 1. Реализовать класс Matrix (матрица).
# Конструктор класса __init__() должен принимать список списков чисел для задания превоначального состояния матрицы.
# Подсказка: матрица — это таблица размером N строк на M столбцов (размерность N x M).
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
#
# | 31 22 |
# | 37 43 |
# | 51 86 |
#
# | 3 5 32 |
# | 2 4 6 |
# | -1 64 -8 |
#
# | 3 5 8 3 |
# | 8 3 7 1 |
# В методе __init__() надо проверить корректность передаваемых данных - все списки должны быть одинаковой длины.
# В случае расхождения выбрасывать исключение ValueError с соответствующим описанием.
# Добавить метод __add__() сложения двух матриц. Складывать можно матрицы одинаковой размерности.
# В случае, когда пользователь пытается сложить матрицы разных размеров выбросить исключение ValueError.
# В результате сложения двух матриц должна образоваться новая матрица размером N x M, где каждый элемент
# в ячейке i,j образован сложением значений из соответствующих ячеек исходных матриц.
# Реализовть метод __str__(), возвращающий строку вида " 1 2 3\n 4 5 6", отводя под числа по три разряда,
# чтобы для небольших чисел матрица выглядела как таблица.
# Создать три матрицы (две одинаковые по размеру и одну с другим размером).
# Сложить одинаковые матрицы и потом сложить разные. Напечатать исходные таблицы и результат сложения.

class Matrix:
    def __init__(self, args):
        self.args = args
        length = len(self.args[0])
        for arg in self.args:
            if len(arg) != length:
                raise ValueError(f'Разные длины строк в матрице {self.args}')

    def __add__(self, other):
        if len(self) != len(other) or len(self[0]) != len(other[0]):
            raise ValueError(f'Вы пытаетесь сложить матрицы разного размера')
        else:
            matrix_sum = [
                [self[i][j] + other[i][j] for j in range(len(self[0]))] for i in range(len(self))
            ]
            return Matrix(matrix_sum)

    def __len__(self):
        return len(self.args)

    def __getitem__(self, index):
        return self.args[index]

    def __str__(self):
        result = ''
        for i in range(len(self.args)):
            result += f'{"  ".join(str(self.args[i]).strip("[").strip("]").split(","))}\n'
        return result


a = Matrix([[1, 2], [3, 4], [5, 6]])
b = Matrix([[7, 8], [9, 10], [11, 12]])
c = Matrix([[4, 5, 2], [1, 3, 10], [11, 12, 13]])

print(a)
print(b)
print(c)
print('________')
print(a + b)
print('________')
print(a + c)
